name: release


on:
  push:
    branches:
    - main


jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    outputs:
      paths: ${{ steps.rp.outputs.paths_released }}
      releases: ${{ steps.rp.outputs.releases_created }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: rp
        with:
          token: ${{ secrets.GH_PAT_RELEASE_PLEASE }}


  build-backend:
    needs: release
    if: contains(join(fromJSON(needs.release.outputs.paths), ','), 'backend-party-battle')
    runs-on: blacksmith-4vcpu-ubuntu-2404-arm
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_VERSION: ${{ github.sha }}
    outputs:
      image_version: ${{ env.IMAGE_VERSION }}
      backend_version: ${{ steps.derive_backend_version.outputs.backend_version }}
    steps:
      - uses: actions/checkout@v4


      - name: Derive backend version from release outputs
        id: derive_backend_version
        env:
          RELEASES: ${{ needs.release.outputs.releases }}
        run: |
          chmod +x .github/scripts/read_manifest_version.py
          ver=$(.github/scripts/read_manifest_version.py backend-party-battle)
          echo "BACKEND_VERSION=$ver" >> $GITHUB_ENV
          echo "backend_version=$ver" >> $GITHUB_OUTPUT


      - name: Setup Blacksmith Builder
        uses: useblacksmith/setup-docker-builder@v1


      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - uses: useblacksmith/build-push-action@v2
        with:
          context: .
          file: ./backend-party-battle/dockerfile
          push: true
          tags: |
            ghcr.io/thirty-degrees/backend-party-battle:${{ env.IMAGE_VERSION }}
            ghcr.io/thirty-degrees/backend-party-battle:latest
          build-args: |
            NODE_VERSION=24-alpine
          platforms: linux/arm64
          cache-from: type=registry,ref=ghcr.io/thirty-degrees/backend-party-battle:buildcache
          cache-to: type=registry,ref=ghcr.io/thirty-degrees/backend-party-battle:buildcache,mode=max


  trigger-backend-deployment:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - name: Trigger backend image update
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GH_PAT_ACTIONS_TRIGGER }}
          repository: Calfur/calfur-dev
          event-type: add-party-battle-backend-version
          client-payload: '{"image_version":"${{ needs.build-backend.outputs.image_version }}","backend_version":"${{ needs.build-backend.outputs.backend_version }}"}'


  build-web:
    needs: release
    if: contains(join(fromJSON(needs.release.outputs.paths), ','), 'frontend-party-battle')
    runs-on: blacksmith-4vcpu-ubuntu-2404-arm
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_VERSION: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4


      - name: Setup Blacksmith Builder
        uses: useblacksmith/setup-docker-builder@v1


      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - uses: useblacksmith/build-push-action@v2
        with:
          context: .
          file: ./frontend-party-battle/dockerfile
          push: true
          tags: |
            ghcr.io/thirty-degrees/frontend-party-battle-web:${{ env.IMAGE_VERSION }}
            ghcr.io/thirty-degrees/frontend-party-battle-web:latest
          platforms: linux/arm64
          cache-from: type=registry,ref=ghcr.io/thirty-degrees/frontend-party-battle-web:buildcache
          cache-to: type=registry,ref=ghcr.io/thirty-degrees/frontend-party-battle-web:buildcache,mode=max


  build-android:
    needs: release
    if: contains(join(fromJSON(needs.release.outputs.paths), ','), 'frontend-party-battle')
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      ANDROID_SDK_ROOT: /home/runner/.android/sdk
    steps:
      - uses: actions/checkout@v4


      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'
          cache-dependency-path: package-lock.json


      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21


      - name: Cache Android SDK
        uses: actions/cache@v4
        id: android-sdk-cache
        with:
          path: ${{ env.ANDROID_SDK_ROOT }}
          key: android-sdk-${{ runner.os }}-34-0-0
          restore-keys: |
            android-sdk-${{ runner.os }}-


      - name: Setup Android SDK
        uses: android-actions/setup-android@v3


      - name: Install Android build tools
        if: steps.android-sdk-cache.outputs.cache-hit != 'true'
        run: sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"


      - name: Install dependencies
        run: npm ci


      - name: Build shared types
        run: npm run -w types-party-battle build


      - name: Cache Expo prebuild
        uses: actions/cache@v4
        id: expo-prebuild-cache
        with:
          path: |
            frontend-party-battle/android
            frontend-party-battle/ios
          key: expo-prebuild-${{ runner.os }}-${{ hashFiles('frontend-party-battle/package*.json', 'frontend-party-battle/app.config.ts', 'frontend-party-battle/app.json') }}
          restore-keys: |
            expo-prebuild-${{ runner.os }}-


      - name: Prebuild native Android project
        if: steps.expo-prebuild-cache.outputs.cache-hit != 'true'
        working-directory: ./frontend-party-battle
        run: npx expo prebuild --platform android --non-interactive


      - name: Decode Android keystore
        working-directory: ./frontend-party-battle
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        run: |
          mkdir -p android/app
          printf %s "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/app/keystore.jks
          echo "KEYSTORE_PATH=$(pwd)/android/app/keystore.jks" >> "$GITHUB_ENV"


      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            frontend-party-battle/android/.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('frontend-party-battle/android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-


      - name: Build Android AAB with Gradle
        working-directory: ./frontend-party-battle/android
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          ./gradlew :app:bundleRelease \
            -Pandroid.injected.signing.store.file="$KEYSTORE_PATH" \
            -Pandroid.injected.signing.store.password="$ANDROID_KEYSTORE_PASSWORD" \
            -Pandroid.injected.signing.key.alias="$ANDROID_KEY_ALIAS" \
            -Pandroid.injected.signing.key.password="$ANDROID_KEY_PASSWORD" \
            -Pandroid.injected.signing.store.type=PKCS12 \
            --build-cache --no-daemon


      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: |
            frontend-party-battle/android/app/build/outputs/bundle/release/app-release.aab
            frontend-party-battle/android/app/build/outputs/mapping/release/mapping.txt
          if-no-files-found: error


  deploy-android:
    needs: build-android
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: android-release
          path: dist


      - name: Upload to Google Play (internal)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          packageName: ch.thirty_degrees.party_battle
          releaseFiles: dist/bundle/release/app-release.aab
          mappingFile: dist/mapping/release/mapping.txt
          track: internal
          status: draft