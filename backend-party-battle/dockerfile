ARG NODE_VERSION=24-alpine

FROM node:${NODE_VERSION} AS deps
WORKDIR /app

# Copy root + workspace manifests
COPY package.json package-lock.json ./
COPY backend-party-battle/package.json backend-party-battle/package.json
COPY types-party-battle/package.json types-party-battle/package.json

# Install only backend workspace production dependencies
RUN npm ci -w backend-party-battle --omit=dev

FROM node:${NODE_VERSION} AS builder
WORKDIR /app

# Copy manifests again for a clean install with dev deps for build
COPY package.json package-lock.json ./
COPY backend-party-battle/package.json backend-party-battle/package.json
COPY types-party-battle/package.json types-party-battle/package.json

# Install deps for backend workspace including dev deps
RUN npm ci -w backend-party-battle

# Copy sources needed to build (backend + shared types)
COPY backend-party-battle/tsconfig.json backend-party-battle/tsconfig.json
COPY backend-party-battle/src backend-party-battle/src
COPY types-party-battle types-party-battle

# Build backend workspace
RUN npm run -w backend-party-battle build

FROM node:${NODE_VERSION} AS runner
WORKDIR /app/backend-party-battle
ENV NODE_ENV=production

# Bring in production node_modules from deps stage and built output
COPY --from=deps /app/node_modules /app/node_modules
COPY --from=builder /app/backend-party-battle/package.json ./package.json
COPY --from=builder /app/backend-party-battle/build ./build

EXPOSE 2567

CMD ["node", "build/index.js"]
